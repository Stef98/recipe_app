{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["string","console","log","charAt","toUpperCase","slice","Recipe","title","calories","image","ingredients","cuisineType","mealType","className","style","recipe","pic","src","alt","map","ingredient","text","Math","round","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipe","a","fetch","response","json","data","hits","onSubmit","e","preventDefault","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"8JAG+BA,E,qGAI/BC,QAAQC,KAJuBF,EAIG,OAHlBG,OAAO,GAAGC,cAAgBJ,EAAOK,MAAM,IAKvD,IAsBeC,EAtBA,SAAC,GAOT,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,SACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,YAGI,EAFJC,YAEI,EADJC,SAEA,OACE,sBAAKC,UAAWC,IAAMC,OAAtB,UACE,qBAAKF,UAAWC,IAAME,IAAKC,IAAKR,EAAOS,IAAI,KAC3C,6BAAKX,IACL,+BACE,6CACCG,EAAYS,KAAI,SAACC,GAAD,OACf,6BAAKA,EAAWC,aAGpB,2CAAcC,KAAKC,MAAiB,IAAXf,GAAkB,WCwClCgB,EA/DH,WACV,IAGA,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRC,MACC,CAACH,IAEJ,IAAMG,EAAS,uCAAG,8BAAAC,EAAA,sEACOC,MAAM,mCAAD,OACSL,EADT,mBAZhB,WAYgB,oBAXf,qCAUG,cACVM,EADU,gBAIGA,EAASC,OAJZ,OAIVC,EAJU,OAKhBX,EAAWW,EAAKC,MAChBtC,QAAQC,IAAIoC,EAAKC,MAND,2CAAH,qDAmBf,OACE,sBAAK1B,UAAU,MAAf,UACE,qBAAKA,UAAU,cAAf,SACE,mDAEF,uBAAM2B,SAXQ,SAACC,GACjBA,EAAEC,iBACFX,EAASH,GACTC,EAAU,KAQmBhB,UAAU,aAArC,UACE,uBACEA,UAAU,YACV8B,KAAK,OACLC,MAAOhB,EACPiB,SApBa,SAACJ,GACpBZ,EAAUY,EAAEK,OAAOF,UAsBf,wBAAQ/B,UAAU,eAAe8B,KAAK,SAAtC,uBAIF,qBAAK9B,UAAU,WAAf,SACGa,EAAQP,KAAI,SAACJ,GAAD,OACX,cAAC,EAAD,CAEEN,MAAOM,EAAOA,OAAON,MACrBF,MAAOQ,EAAOA,OAAOgC,MACrBrC,YAAaK,EAAOA,OAAOL,YAC3BF,SAAUO,EAAOA,OAAOP,UAJnBO,EAAOA,OAAOgC,gBC3ChBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,IAAM,uB","file":"static/js/main.4d60ed2a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport style from \"./recipe.module.css\";\r\n\r\nfunction capitalizeFirstLetter(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nconsole.log(capitalizeFirstLetter(\"foo\")); // Foo\r\n\r\nconst Recipe = ({\r\n  title,\r\n  calories,\r\n  image,\r\n  ingredients,\r\n  cuisineType,\r\n  mealType,\r\n}) => {\r\n  return (\r\n    <div className={style.recipe}>\r\n      <img className={style.pic} src={image} alt=\"\" />\r\n      <h1>{title}</h1>\r\n      <ul>\r\n        <h2>Ingredients</h2>\r\n        {ingredients.map((ingredient) => (\r\n          <li>{ingredient.text}</li>\r\n        ))}\r\n      </ul>\r\n      <p>Calories: {Math.round(calories * 100) / 100}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default Recipe;\r\n","import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Recipe from \"./Recipe\";\n\nconst App = () => {\n  const AppID = \"5ab73aad\";\n  const AppKey = \"07fa2189afb9c18576ae983416be186e\";\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n\n  useEffect(() => {\n    getRecipe();\n  }, [query]);\n\n  const getRecipe = async () => {\n    const response = await fetch(\n      `https://api.edamam.com/search?q=${query}&app_id=${AppID}&app_key=${AppKey}`\n    );\n    const data = await response.json();\n    setRecipes(data.hits);\n    console.log(data.hits);\n  };\n\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = (e) => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"headingForm\">\n        <h1>Recipe searcher</h1>\n      </div>\n      <form onSubmit={getSearch} className=\"searchForm\">\n        <input\n          className=\"searchBar\"\n          type=\"text\"\n          value={search}\n          onChange={updateSearch}\n        />\n\n        <button className=\"searchButton\" type=\"submit\">\n          Search\n        </button>\n      </form>\n      <div className=\"contents\">\n        {recipes.map((recipe) => (\n          <Recipe\n            key={recipe.recipe.label}\n            image={recipe.recipe.image}\n            title={recipe.recipe.label}\n            ingredients={recipe.recipe.ingredients}\n            calories={recipe.recipe.calories}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__piN4o\",\"pic\":\"recipe_pic__1fAgw\"};"],"sourceRoot":""}